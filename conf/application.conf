# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

play.application.loader = "modules.StartTimeApplicationLoader"

play.http.errorHandler = handlers.ErrorHandler

play.modules.enabled += logging.LoggingModule

db.logging.driver=org.h2.Driver
db.logging.url="jdbc:h2:mem:terse-logback"
db.logging.username="sa"
db.logging.password=""

# https://docs.sentry.io/error-reporting/quickstart/?platform=java
sentry.dsn="https://some-random-key@sentry.io/1111"
sentry.dsn=${?SENTRY_DSN}

# https://www.honeycomb.io/product-trial/
honeycomb {
  writeKey = ""
  writeKey = ${?HONEYCOMB_API_KEY}

  dataSet = "terse-logback-showcase"
  dataSet = ${?HONEYCOMB_DATASET}

  serviceName = "terse-logback-showcase"
}

logging.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = 2
  }
}

logging.sql {

  // We MUST use the event_id here, because flake ids are k-ordered, and guaranteed to increment
  // with a counter.
  // We can't use the serial id because we're using a DB pool and inserts can happen out of order.
  // We can't use the timestamp because timestamp is only to microsecond and we can get several events
  // appended to ringbuffer in that period.
  queryStatement = """select * from events order by event_id limit ? offset ?"""

  byIdStatement = """select * from events where event_id = ?"""

  byCorrelationIdStatement = """
    select * from events where correlation_id = ? order by event_id limit ? offset ?
  """

  truncateStatement = """truncate table events"""
}
